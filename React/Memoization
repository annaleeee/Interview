## 리액트 메모이제이션
- 메모이제이션 (Memoization)
  - 연산의 결과값을 메모리에 저장해 두고 이전 값과 결과가 동일할 때 재사용하는 기법
  - React.memo( ) → props의 값으로 변경을 확인
  - useCallback( ), useMemo( ) → dependency 배열 내부의 값으로 변경사항 확인

1) React.memo(컴포넌트)

- 컴포넌트 자체를 메모이제이션
- 자체적으로 props값을 비교해서 달라진 부분이 없다면 리액트 DOM에서 비교 작업이 들어가지 않음

2) useCallback(( ) ⇒ { 함수 그 자체 }, [ ])

- 함수 자체를 메모이제이션
- 자바스크립트에서 함수는 객체로 취급 → 리렌더링이 일어날 때마다 새로운 함수 생성
- 자식 컴포넌트의 불필요한 리렌더링을 막기 위해 useCallback( )으로 감싸줘야 함
- deps에 들어있는 의존성 값이 변경되지 않는다면 이전에 생성한 함수의 참조 값을 반환해줌

3) useMemo(( ) ⇒ 함수의 리턴값, [ ])

- 함수의 리턴 값을 메모이제이션
- deps에 들어있는 의존성 값이 변경되지 않는다면 메모이제이션 된 값을 사용
    - props의 얕은 비교를 통해 이전과 현재의 props가 같은지 확인함
        - props가 변경되지 않았다면, 이전 렌더링된 결과를 재사용
    - 비어있거나 메모이제이션이 된 props 받아야함
