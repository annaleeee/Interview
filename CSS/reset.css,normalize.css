## recet.css vs normalize.css
- CSS Normalize
    - 가능한 브라우저의 내장 스타일을 최대한 건들지 않는 선에서 브라우저 간 상이한 부분만 스타일을 통일
    - 크게 달라지는 부분은 없지만, CSS Normalize가 적용된 웹페이지는 어느 브라우저에서든 일관적인 모습으로 나타남
    - 여러 오픈 소스 CSS Normalize가 있지만 Normalize.css가 가장 대중적으로 사용
        - React 프로젝트에서 Styled Components 사용할 경우에는 styled-normalize가 많이 사용됨

    - 장점
        - Reset과 다르게 github를 통해 지속적인 업데이트가 이루어짐 → 안정성이 높음
        - 버그 및 브라우저 간 차이점을 일치시켜줌

- CSS Reset
    - 극단적으로 브라우저 내장 스타일을 초기화
    - 브라우저가 자체적으로 모든 HTML 요소에 적용해준 스타일이 모두 사라짐
        - 소스코드를 직접 보지 않는 이상, 어디가 h1 이고 어디가 p 인지 구분할 수 없음
    - 오픈 소스 중에서 Eric Meyer’s CSS Reset이 많이 사용, 최근에는 최신 웹 개발 트랜드를 반영한 Elad Shechter’s CSS Reset 많이 사용함
    
    - 장점
        - 다른 부분에 신경을 쓰지 않아도 됨 (고려해야할 변수가 적음)
            → 작업속도 측면에서 효율적
    - 단점
        - 적용되는 스타일이 하나도 없기 때문에 오히려 코드 길이가 길어질 수 있음
        - 유용한 스타일도 제거하기 때문에 비효율적일 수도 있음
        - 브라우저는 계속 업데이트되고 있지만, 리셋 CSS 업데이트는 더딤

#### [ 정리 ]
- 브라우저의 내장 스타일을 최대한 따르면서 필요한 부분만 스타일을 변경하거나 추가하고 싶을 때
  -> CSS Normalize 선택
- 브라우저의 내장 스타일에 전혀 의존하지 않고 모든 HTML 요소를 하나부터 열까지 직접 스타일하고자 한다면 
  -> CSS Reset 선택
